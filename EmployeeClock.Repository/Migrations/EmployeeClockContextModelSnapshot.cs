// <auto-generated />
using System;
using EmployeeClock.Repository.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeClock.Repository.Migrations
{
    [DbContext(typeof(EmployeeClockContext))]
    partial class EmployeeClockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("EmployeeClock.Entities.Employee", b =>
                {
                    b.Property<Guid>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfHire")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfQuit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Address = "4033077577",
                            DateOfBirth = new DateTime(1993, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2022, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@gmail.com",
                            EmergencyContactName = "Bob",
                            EmergencyContactPhone = "4033077997",
                            FirstName = "Berry",
                            LastName = "Griffin Beak Eldritch",
                            Phone = "Legacy Gate SE"
                        },
                        new
                        {
                            EmployeeID = new Guid("d28888e9-2ba9-473a-a40f-e38cb23f9b23"),
                            Address = "4033071277",
                            DateOfBirth = new DateTime(1980, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vladislav@gmail.com",
                            EmergencyContactName = "Vika",
                            EmergencyContactPhone = "4033012997",
                            FirstName = "Vladislav",
                            LastName = "Bordick",
                            Phone = "Shevcheko Str"
                        },
                        new
                        {
                            EmployeeID = new Guid("d28888e9-2cd1-473a-a23f-e38cb23f9b23"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "andrew@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Anrew",
                            LastName = "Borisuk",
                            Phone = "Bow River"
                        },
                        new
                        {
                            EmployeeID = new Guid("b6fad037-0750-4c38-b615-56e8951840dc"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "teddyw@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Teddy",
                            LastName = "Karchenko",
                            Phone = "Red Deer"
                        },
                        new
                        {
                            EmployeeID = new Guid("20c031bd-6b6d-4880-8532-4524922d5a47"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "scott@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Scott",
                            LastName = "Phoel",
                            Phone = "Edmonton"
                        },
                        new
                        {
                            EmployeeID = new Guid("2e773a8e-a50b-4c05-aa8c-4dfdb332d831"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vika@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Vika",
                            LastName = "Pigan",
                            Phone = "Brandon"
                        },
                        new
                        {
                            EmployeeID = new Guid("f80a777c-5f7b-4da3-954e-814a7ea171e5"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lana@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Lana",
                            LastName = "Radevych",
                            Phone = "Stryi"
                        },
                        new
                        {
                            EmployeeID = new Guid("b01273d5-4056-4100-b1e4-43b720583c71"),
                            Address = "4033071111",
                            DateOfBirth = new DateTime(1993, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lana@gmail.com",
                            EmergencyContactName = "Kira",
                            EmergencyContactPhone = "4031112997",
                            FirstName = "Roksolana",
                            LastName = "Bondziak",
                            Phone = "Stryi"
                        });
                });

            modelBuilder.Entity("EmployeeClock.Entities.TimeTransaction", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("TransactionID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("TimeTransactions");

                    b.HasData(
                        new
                        {
                            TransactionID = new Guid("2b781937-3e38-4754-aab9-d7c8c526bf2d"),
                            EmployeeID = new Guid("b01273d5-4056-4100-b1e4-43b720583c71"),
                            EndTime = new DateTime(2022, 4, 10, 15, 30, 52, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 4, 10, 8, 29, 52, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TransactionID = new Guid("cc632ef1-9bdb-46f8-b278-c0a00bea9580"),
                            EmployeeID = new Guid("b01273d5-4056-4100-b1e4-43b720583c71"),
                            EndTime = new DateTime(2022, 4, 11, 16, 32, 24, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 4, 11, 7, 30, 2, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TransactionID = new Guid("d259e39e-bef1-44f3-a040-a1b373fb748a"),
                            EmployeeID = new Guid("2e773a8e-a50b-4c05-aa8c-4dfdb332d831"),
                            EndTime = new DateTime(2022, 4, 10, 16, 30, 52, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 4, 10, 7, 30, 42, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TransactionID = new Guid("a2dfd946-74b9-4397-8004-215f434fa9a5"),
                            EmployeeID = new Guid("2e773a8e-a50b-4c05-aa8c-4dfdb332d831"),
                            EndTime = new DateTime(2022, 4, 11, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 4, 11, 7, 15, 2, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeClock.Entities.TimeTransaction", b =>
                {
                    b.HasOne("EmployeeClock.Entities.Employee", "Employee")
                        .WithMany("TimeTransactions")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeClock.Entities.Employee", b =>
                {
                    b.Navigation("TimeTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
